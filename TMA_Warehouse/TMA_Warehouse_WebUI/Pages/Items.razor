@page "/items"
@inject IItemService ItemService
@inject NavigationManager NavigationManager

@if(ItemService.Items == null)
{
    <h5>Loading Items...</h5>
}
else
{
    <h3 class="p-3">Items List</h3>
    <div class="grid p-2">
        <QuickGrid Items="ItemService.Items.AsQueryable()" ResizableColumns>
            <PropertyColumn Property="i => i.ItemId" Title="#" Sortable="true"/>
            <PropertyColumn Property="i => i.ItemGroup" Title="Group" Sortable="true" />
            <PropertyColumn Property="i => i.UnitOfMeasurement" Title="Measurement" Sortable="true"/>
            <PropertyColumn Property="i => i.Quantity" Sortable="true" />
            <PropertyColumn Property="i => i.PriceWithoutVAT" Title="Price without VAT" Sortable="true" />
            <PropertyColumn Property="i => i.Status" Sortable="true" />
            <PropertyColumn Property="i => i.StorageLocation" Title="Storage Location" Sortable="true" />
            <PropertyColumn Property="i => i.ContactPerson" Title="Contact Person" Sortable="true" />
            <TemplateColumn>
                <button class="btn btn-info text-white btn-sm">
                    Update
                </button>
                <button class="btn btn-danger btn-sm">
                    Delete
                </button>
            </TemplateColumn>
        </QuickGrid>
    </div>
    <div>
        <button class="btn btn-primary mt-3" asp-action="Add">
            Add new item
        </button>
    </div>
}
@code{

    protected override async Task OnInitializedAsync()
    {
        await ItemService.GetItems();
    }
    void ShowItem(int id){
        NavigationManager.NavigateTo($"item/{id}");
    }
}


<script src="https://cdn.jsdelivr.net/npm/bootstrap-table@1.22.3/dist/bootstrap-table.min.js"></script>
