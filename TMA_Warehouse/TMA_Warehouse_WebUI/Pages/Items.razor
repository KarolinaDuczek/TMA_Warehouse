@page "/items"
@inject IItemService ItemService
@inject NavigationManager NavigationManager

@if(ItemService.Items == null)
{
    <h5>Loading Items...</h5>
}
else
{
    <h3 class="p-3">Items List</h3>
    <div class="p-2">
        <table class="table sort-ascending">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Group</th>
                    <th>Measurement</th>
                    <th>Quantity</th>
                    <th>Price without VAT</th>
                    <th>Status</th>
                    <th>Storage Location</th>
                    <th>Contact Person</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in ItemService.Items)
                {
                    <tr>
                        <td>@item.ItemId</td>
                        <td>@item.ItemGroup</td>
                        <td>@item.UnitOfMeasurement</td>
                        <td>@item.Quantity</td>
                        <td>@item.PriceWithoutVAT</td>
                        <td>@item.Status</td>
                        <td>@item.StorageLocation</td>
                        <td>@item.ContactPerson</td>
                        <td>
                            <button class="btn btn-primary"
                                    @onclick="(() => ShowItem(item.ItemId))">
                                <i class="oi oi-pencil"></i>
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div>
        <button class="btn btn-primary mt-3" @onclick="CreateNewItem">
            Add new item
        </button>
    </div>
}
@code{

    protected override async Task OnInitializedAsync()
    {
        await ItemService.GetItems();
    }

    void ShowItem(int id){
        NavigationManager.NavigateTo($"item/{id}");
    }

    void CreateNewItem()
    {
        NavigationManager.NavigateTo("/item");
    }
}

